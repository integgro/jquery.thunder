(function (a) { a.thunder = {}; a.thunder.settings = { version: "1.0.4", message: { animate: true, focus: false, close: { show: true, title: "Close this notification"} }, form: { message: { selector: null }, loading: { selector: null }, disableElementsBeforeSending: true} }; var b = { message: { create: function (b, c, d, e) { var f = a.extend({ animate: true, focus: false, close: { show: true, title: "Close this notification"} }, e); b.addClass("thunder-notification"); b.hide(); b.empty(); var g = a({}); var h = b.parent().css("overflow") == "visible" ? a("html:not(:animated),body:not(:animated)") : b.parent(); var i = a('<div class="thunder-notification-content"></div>'); b.addClass(c); b.append(i); if (a.isArray(d) && d.length > 0) { var j = a("<ul></ul>"); a.each(d, function () { j.append(a("<li></li>").html(this.Text)) }); i.html(j) } else { i.html(d) } if (f.focus) { g = b.prev(".thunder-notification-focus"); if (g.size() == 0) { b.before('<div class="thunder-notification-focus"></div>'); g = b.prev(".thunder-notification-focus") } } if (f.animate) { if (f.focus) { h.animate({ scrollTop: g.offset().top - 20 }, "slow", function () { b.slideDown() }) } else { b.slideDown() } } else { h.scrollTop(g.offset().top - 20); b.show() } if (f.close.show) { var k = a('<a class="close" href="#"></a>'); k.attr("title", f.close.title); b.append(k); k.click(function (a) { if (f.animate) { b.slideUp() } else { b.hide() } a.preventDefault() }) } }, success: function (c, d) { return this.each(function () { b.message.create(a(this), "thunder-success", c, d) }) }, error: function (c, d) { return this.each(function () { b.message.create(a(this), "thunder-error", c, d) }) }, attention: function (c, d) { return this.each(function () { b.message.create(a(this), "thunder-attention", c, d) }) }, information: function (c, d) { return this.each(function () { b.message.create(a(this), "thunder-information", c, d) }) } } }; a.fn.message = function (c) { if (b.message[c]) { return b.message[c].apply(this, Array.prototype.slice.call(arguments, 1)) } else if (typeof c == "object" || typeof c == "string") { return b.message.success.apply(this, arguments) } else { a.error("Method " + c + " does not exist on jQuery.message") } }; a.fn.ajaxForm = function (b) { var c = a(this); var d = a.extend({ message: null, loading: null, disableElements: "input,select,textarea,button", onSuccess: function () { }, onBefore: function () { }, onComplete: function () { } }, b); var e = a(d.message); var f = a(d.loading); var g = c.find('input[type="submit"]'); if (e.size() == 0) { c.before('<div class="thunder-form-message"></div>'); e = c.prev(".thunder-form-message") } if (f.size() == 0) { g.after('<span class="thunder-form-loading"></span>'); f = c.find(".thunder-form-loading"); f.css({ "margin-top": -g.outerHeight(), "margin-left": g.outerWidth() + 2 }) } c.data("message", e); e.hide(); f.hide(); if (!c.attr("action") || c.attr("action").trim() == "") { e.message("error", "Form action no exist.") } c.live("submit", function () { e.hide(); a.ajax({ statusCode: statusCode(e), url: c.attr("action"), type: c.attr("method"), headers: { "Thunder-Ajax": true }, data: c.serialize(), beforeSend: function () { a(d.disableElements, c).disableElement(); f.show(); d.onBefore() }, complete: function () { a(d.disableElements, c).enableElement(); f.hide(); d.onComplete() }, success: function (b) { window.setTimeout(function () { if (typeof b == "object") { if (b.Status) { if (b.Status == 200) { d.onSuccess(c, b) } else { if (b.Messages) { if (b.Status == 202) { e.message("error", b.Messages) } else if (b.Status == 203) { e.message("information", b.Messages) } else if (b.Status == 204) { e.message("attention", b.Messages) } } else { e.message("error", "Message no exist in request result.") } } } } else { if (a(b).is(".message")) { e.html(b); e.show() } else { d.onSuccess(c, b) } } }, 0) } }); return false }) }; a.fn.grid = function (b) { var c = a(this); var d = a.extend({ message: null, loading: null, form: null, url: c.data("url"), pageSize: !c.data("page-size") ? 10 : c.data("page-size"), load: !c.data("load") ? true : c.data("load"), orders: [], onComplete: function () { } }, b); var e = a(d.message); var f = a(d.loading); var g = a(d.form); var h = a('<div class="thunder-grid-content"></div>'); c.html(h); if (e.size() == 0) { c.before('<div class="thunder-grid-message"></div>'); e = c.prev(".thunder-grid-message") } if (f.size() == 0) { h.html('<div class="thunder-grid-loading"></div>'); f = a(".thunder-grid-loading", h) } if (g.size() == 0) { c.prepend('<form class="thunder-grid-form"></form>'); g = a(".thunder-grid-form", c) } g.append('<input type="hidden" name="CurrentPage" value="0" />'); g.append('<input type="hidden" name="PageSize" value="' + d.pageSize + '" />'); g.setOrders(d.orders); f.hide(); if (!d.url || d.url == "") { e.message("error", "Url is null."); return } var i = function (b) { a.ajax({ statusCode: statusCode(e), type: "POST", data: g.serialize(), url: d.url, headers: { "Thunder-Ajax": true }, beforeSend: function () { b.show() }, complete: function () { b.hide() }, success: function (b) { if (typeof b == "string") { h.html(b); a("tbody tr:even", c).addClass("even"); d.onComplete(c) } } }) }; var j = function (b) { a('input:hidden[name="CurrentPage"]', g).val(b); i(a(".thunder-paged-loading", c)) }; if (d.load) { i(f) } g.submit(function () { a('input:hidden[name="CurrentPage"]', g).val(0); i(f); return false }); a("a.thunder-grid-paged", c).live("click", function (b) { var c = a(this); if (!c.is(".disabled")) { j(c.data("page")) } b.preventDefault() }); a("a.thunder-grid-order", c).live("click", function (b) { var c = a(this); if (c.data("column") != "undefined" && c.data("asc") != "undefined") { g.setOrders([{ Column: c.data("column"), Asc: c.data("asc")}]); a('input:hidden[name="CurrentPage"]', g).val(0); i(f) } b.preventDefault() }); a("select.thunder-grid-paged", c).live("change", function () { var b = a(this); j(a("option:selected", b).val()) }) }; a.modal = function (b) { var c = a.extend({ iframe: false, iframeScroll: "no", url: "", width: 600, resizable: false, draggable: false, cssClass: "", onOpen: function () { }, onClose: function () { } }, b); if (a("body")["dialog"] == undefined) { a.error("This project not implement jquery.ui."); return } if (a(".thunder-modal").size() == 0) { a("body").prepend('<div class="thunder-modal"></div>') } var d = a(".thunder-modal", a("body")).addClass(c.cssClass); window.modalInstance = d; d.dialog(a.extend({ autoOpen: true, modal: true, open: function () { a(".ui-dialog-titlebar ").remove(); if (c.iframe) { var b = a('<iframe frameborder="0" marginheight="0" marginwidth="0" scrolling="auto"></iframe>'); b.attr("scrolling", c.iframeScroll); b.attr("src", c.url); b.attr("width", d.width()); b.attr("height", d.height()); d.css("overflow", "hidden"); d.html(b); b.load(function () { c.onOpen(a(b.contents()[0])); a(".thunder-modal-close", a(b.contents()[0])).live("click", function (b) { b.preventDefault(); a.closeModal() }) }) } else { d.append('<div class="thunder-modal-message"></div>').append('<img src="content/jquery.thunder/images/loading.gif" class="thunder-modal-loading" />'); a.ajax({ statusCode: statusCode(a(".thunder-modal-message", d), { close: { show: false} }), headers: { "Thunder-Ajax": true, "Thunder-Modal": true }, url: c.url, success: function (a) { d.html(a); c.onOpen(d) } }) } }, beforeClose: function () { c.onClose(d); d.empty(); d.dialog("destroy") } }, c)) }; a.closeModal = function () { if (window.modalInstance) { window.modalInstance.dialog("close") } }; a.fn.setOrders = function (b) { return this.each(function () { var c = a(this); a("input.thunder-grid-order", c).remove(); a.each(b, function (a) { c.append('<input type="hidden" class="thunder-grid-order" name="Orders[' + a + '].Column" value="' + this.Column + '" />'); c.append('<input type="hidden" class="thunder-grid-order" name="Orders[' + a + '].Asc" value="' + this.Asc + '" />') }) }) }; a.fn.disableElement = function () { return this.each(function () { a(this).attr("disabled", "disabled") }) }; a.fn.enableElement = function () { return this.each(function () { a(this).removeAttr("disabled") }) }; a.fn.serializeObject = function () { var b = {}; var c = this.serializeArray(); a.each(c, function () { if (b[this.name]) { if (!b[this.name].push) { b[this.name] = [b[this.name]] } b[this.name].push(this.value || "") } else { b[this.name] = this.value || "" } }); return b }; statusCode = function (b, c) { var d = a.extend({}, c); return { 400: function () { b.message("error", "Bad request.", d); a(".thunder-modal-loading").hide() }, 401: function () { b.message("error", "Unauthorized.", d); a(".thunder-modal-loading").hide() }, 403: function () { b.message("error", "Forbidden.", d); a(".thunder-modal-loading").hide() }, 404: function () { b.message("error", "Page not found.", d); a(".thunder-modal-loading").hide() }, 405: function () { b.message("error", "Method not allowed.", d); a(".thunder-modal-loading").hide() }, 407: function () { b.message("error", "Proxy authentication required.", d); a(".thunder-modal-loading").hide() }, 408: function () { b.message("error", "Request timeout.", d); a(".thunder-modal-loading").hide() }, 500: function () { b.message("error", "Internal server error.", d); a(".thunder-modal-loading").hide() }, 501: function () { b.message("error", "Not implemented.", d); a(".thunder-modal-loading").hide() }, 502: function () { b.message("error", "Bad gateway.", d); a(".thunder-modal-loading").hide() }, 503: function () { b.message("error", "Service unavailable.", d); a(".thunder-modal-loading").hide() } } }; String.prototype.replaceAll = function (a, b) { var c = this; var d = c.indexOf(a); while (d > -1) { c = c.replace(a, b); d = c.indexOf(a) } return c }; a(function () { a.each(a("form[data-ajax]"), function () { var b = a(this); if (b.data("ajax")) { b.ajaxForm({ onBefore: function () { if (window[b.data("ajax-before")]) { window[b.data("ajax-before")]() } }, onComplete: function () { if (window[b.data("ajax-complete")]) { window[b.data("ajax-complete")]() } }, onSuccess: function (a, c) { if (window[b.data("ajax-success")]) { window[b.data("ajax-success")](a, c) } } }) } }); a(".thunder-modal-close").live("click", function (b) { b.preventDefault(); a.closeModal() }) }) })(jQuery)